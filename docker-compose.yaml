version: '2'

services:
  db:
    restart: always
    image: postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRESQL_DB: postgres
      POSTGRESQL_USER: postgres
    volumes:
      - ./dbdata:/var/lib/postgresql/data

  api:
    restart: always
    # Docker hack to wait until Postgres is up, then run stuff.
    command: bash -c "until $(curl --output /dev/null --silent --head --fail db:5432); do; sleep 5; done && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    image: bl4ckpr15m
    volumes:
      - .:/code
    build: .
    depends_on:
      - db
    environment:
      IN_DOCKER: 1
    ports:
      - "8000:8000"

  webserver:
    image: abiosoft/caddy
    depends_on:
      - api
      - frontend
    ports:
      - "80:80"
      - "443:443"
    environment:
      CADDYPATH: /etc/caddycerts
    volumes:
      - ./config/caddy/Caddyfile:/etc/Caddyfile
      - ./config/caddy/.caddy:/etc/caddycerts
    #command: -port 8000 -host 0.0.0.0 "proxy / api:8000 { }"
